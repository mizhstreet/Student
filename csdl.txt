create database StudentManagement

use StudentManagement

create table admin (id int identity primary key, username varchar(100), password text, status bit)

create table Students (student_id int identity primary key,fname varchar(45),lname varchar(45),dob DATE,phone varchar(15),joined_date DATE,address text,status bit,image varchar(100), rollNo varchar(10) unique)

create table Semester (sem_id int identity primary key, name varchar(45))

create table Subjects (subject_id int identity primary key, name varchar(45), sem_id int foreign key references Semester(sem_id), description text, status bit)

create table Class (class_id int identity primary key, name varchar(6), description text, status bit)

create table Class_Student (student_id int foreign key references Students(student_id), class_id int foreign key references Class(class_id))
	
create table Subject_Sessions (session_id int identity primary key, subject_id int foreign key references Subjects(subject_id), name varchar(100))

create table Attendance (attend_id int identity primary key, isMarked bit, session_id int foreign key references Subject_Sessions(session_id), class_id int foreign key references Class(class_id)) 

create table Attendance_Student(attend_id int foreign key references Attendance(attend_id), student_id int foreign key references Students(student_id), attendstatus bit)

create table Exam (exam_id int identity primary key, exam_date date, name varchar(100), subject_id int foreign key references Subjects(subject_id), condition int, class_id int foreign key references Class(Class_id))

create table Exam_Result(exam_id int foreign key references Exam(exam_id), student_id int foreign key references Students(student_id), mark int, remark text)

insert into Semester values ('Ki I')
insert into Semester values ('Ki II')
insert into Semester values ('Ki III')
insert into Semester values ('Ki IV')



Insert into Subjects values('Java I',2,'None',1)
Insert into Subjects values('Java II',2,'None',1)
Insert into Subjects values('AD Java I',2,'None',1)
Insert into Subjects values('ADJava II',2,'None',1)
Insert into Subjects values('C Program',1,'None',1)


Insert Into Subject_Sessions values(1, 'Java I Lab 1')
Insert Into Subject_Sessions values(1, 'Java I Lab 2')
Insert Into Subject_Sessions values(1, 'Java I Lab 3')
Insert Into Subject_Sessions values(1, 'Java I Lab 4')
Insert Into Subject_Sessions values(1, 'Java I Lab 5')
Insert Into Subject_Sessions values(1, 'Java I Lab 6')
Insert Into Subject_Sessions values(1, 'Java I Lab 7')

Insert Into Class values('C1603M', 'Dang hoc ki 2',1)
Insert Into Class values('C1606M', 'Dang hoc ki 1',1)
Insert Into Class values('C1703L', 'Dang hoc ki 1',1)
Insert Into Class values('PH1709M', 'Dang hoc PHP',1)

Insert Into Admin values('admin','admin',1)

Alter table Exam add totalmark int

insert into Exam values('2017-12-12','Thi Java 1 li thuyet',1,40,1,20)

create proc updateSubject
@subjectID int,
@name varchar(45),
@semId int,
@description text,
@status bit
as Update Subjects set name=@name, description=@description, status=@status, sem_id=@semId where subject_id=@subjectID 

create proc getAllSubject as Select subject_id, Subjects.name, description, status, Semester.name as semname from Subjects inner join Semester on Subjects.sem_id = Semester.sem_id

create proc getAllActiveSubject as Select subject_id, Subjects.name, description, status, Semester.name as semname from Subjects inner join Semester 
on Subjects.sem_id = Semester.sem_id where Subjects.status = 1

create proc getSubjectNameBySubjectID
@name varchar(45) 
as select * from Subjects where name = @name

create proc getCountOfSubjects as select count(*) from Subjects

create proc checkAttendanceSession 
@className varchar(6),
@sessionName varchar(100)
as Select attend_id from attendance a inner join Class c on a.class_id = c.class_id inner join subject_sessions s on a.session_id = s.session_id where c.name =@className and s.name =@sessionName

create proc editExam
@examID int, 
@examDate date,
@name varchar(100),
@subjectID int,
@condition int,
@totalmark int,
@classID int
as update Exam set exam_date = @examDate, name = @name, subject_id = @subjectID, condition = @condition,class_id = @classID, totalmark =@totalmark where exam_id=@examID

create proc deleteExam 
@examID int
as delete from exam_result where exam_id=@examID 

create proc getAllExamByClassID 
@classID int
as Select exam_id, s.name as subject_name, e.name, condition,totalmark, exam_date from exam e inner join Subjects s on e.subject_id = s.subject_id where class_id=@classID

create proc getAllSubjectSession
@subject_id int
as select * from Subject_Sessions where subject_id=@subject_id

create proc insertSubjectSession
@subject_id int,
@name varchar(100)
as insert into Subject_Sessions values(@subject_id,@name)

create proc editSubjectSession 
@sessionID int,
@subjectID int,
@name varchar(100)
as update Subject_Sessions set subject_id = @subjectID, name =@name where session_id=@sessionID





